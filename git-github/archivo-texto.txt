Esta es la historia de Isac 

Isac tiene 28 a침os y nacio en CDMX

Hoy hablaremos del curso de induccion de Git y Github  

Se  va empezar  desde la clase 8 ya ser subieron varios los archivos que se realizaron desde antes con las demas clases.


Se realizao la history y los comandos de git para realizar la siguiente clase desde la 8 en andelante hasta las 12- en adelante esta con la explicacion de carpetas.

Clase 13 Git reset  vs git rm 

git rm Es te comando no ayuda a eliminar archivos de git sin eliminar su historial del sustema de verusones. Esto quiere decir qie si necesitamos recuperar el archivo sol devemos de viajar en el tiempo y recuperar el ultimo commit antes de borrar el archivo 

# git rm no se utiliza nada mas asi  debemos usar una de las flags para indeiarle a git como eliminar los archivos que ya no necesitamos en la ultima version del proyecto:
* gir rm --cached: elimina los archivos de nuestro repositorio local y del area de staging, pero los mnatinien en el disco duro 
*git rm --force: elimina los archivos  de git y del disco duro, git siempre guarda todo, por lo general podemos acceder al registro de existencia de los archivo, de modo que podemos recuperarlos si es necesario

# git reset: este comando nos ayuda a volver en el tiempo, pero no como git checkout que nos deja ir, mirar, pasear, y volver, con git reset volvemos al pasado sin posibilidad de volver al futuro, este comando es MUY PELIGROSO y de debemos de emplearlo solo en caso e emergencia.
Hay dos formas de utilizar git reset: con git reset --hard borrando toda la informacion que tengamos en el area de staging y perdiendo todo para siempre, git --soft mantiene alli los cambios del area de staging para que podamos aplicar nuestros ultimos cambios desde el commit anterior 

* git reset --soft: borramos todo el historial y los registros de git pero guardando los cambios que tengamos en staging podemos aplicar las ultimas actualizaciones a un nuevo commit 
* git reset --hard: borra todo TODO toda la informacion del commit y del area de staging se borra el historial 

CLASE 14 
Flujo de trabajo b치sico con un repositorio remoto

Se explica comandos del flujo de trabajo para un repositorio como se muestra en el pdf que esta agregado en el repositorio los siguiente comandos que se mostraron son los siguientes:
Comandos para trabajo remoto con git:
*git clone url del servidor remoto: nos permite descargar los archivos de la ultima version de la rama pricipal y todo el historial de cambios en la carpeta 
*git push: luego de hacer git add y git commit debemos de ejecturar para madar los cambios al servidor remoto
*git fetch: lo usamos para traer actualizaciones del servidor remoto y guardarlas en nuestro repositorio local 
*git merge: lo necesitamos para combinar los ultimos cambios del servidor remoto y nuestro directorio de trabajo 
*git pull: basicamente es la combinacion de fetch y merge

CLASE 15 
Introducci칩n a las ramas o branches de Git

las ramas o branches son las formas de hacer cambios en nuestro proyecto sin afectar el flujo de trabajo de la rama principal 

C칩mo funcionan las ramas en GIT
* git branch nombre de la rama: genera una nueva rama
* git checkout nombre de la rama: con este cambiamos de rama 
* git checkout -b rama : genera una rama y nos mueve a ella automaticamente 
* git reset id-commit: nos lleva a cualquier commit sin importar la rama 
* git checkout rama o id commit:  nos lleva a cualquier commit sin borrar los commit posteriores al tag seleccionado
